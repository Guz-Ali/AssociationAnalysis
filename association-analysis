---
title: "CS 422"
author: "Ali Guzelyel"
date: "12/03/2021"
output: html_document
---

## Libraries
```{r}
library(arules)
library(arulesViz)
library(lsa)
library(plyr)

```

## Association Analysis

### A - Transform to transactions and read
### Reading the files
```{r}
transact1 <- read.transactions("tr-1k-canonical.csv", sep=",")
transact1 <- transact1[-c(1)]
summary(transact1)
#inspect(transact1[0:5])

transact2 <- read.transactions("tr-5k-canonical.csv", sep=",")
transact2 <- transact2[-c(1)]
summary(transact2)
#inspect(transact2[0:5])

transact3 <- read.transactions("tr-20k-canonical.csv", sep=",")
transact3 <- transact3[-c(1)]
summary(transact3)
#inspect(transact3[0:5])

transact4 <- read.transactions("tr-75k-canonical.csv", sep=",")
transact4 <- transact4[-c(1)]
summary(transact4)
#inspect(transact4[0:5])
```
### B - Applying Apriori
### i - Applying Apriori - 1K
```{r}
#minSup, minConf
paste("Why minSup=0.019, conf=0.94? Because after careful consideration, the rules with the most LIFT values were gained through these. Also, as we did in the written questions, we want rules that have low support but high confidence. ")
#itemFrequencyPlot(transact1, support = 0.019)

frequent_list1 <- apriori(transact1, parameter=list(support = 0.019, target="frequent itemsets"))
inspect(sort(frequent_list1, decreasing = T, by="support"))

rules1 <- apriori(transact1, parameter=list(support = 0.019, confidence=0.94))# changed from confidence = 0.9
summary(rules1)
#inspect(rules1, by="confidence")
inspect(rules1, by="lift")
plot(rules1, engine="htmlwidget", main="1K data Lift on Confidence vs Support")


```

### ii - Applying Apriori - 5K
```{r}
#minSup, minConf
frequent_list2 <- apriori(transact2, parameter=list(support = 0.019, target="frequent itemsets"))
inspect(sort(frequent_list2, decreasing = T, by="support"))

rules2 <- apriori(transact2, parameter=list(support = 0.019, confidence=0.94))#, confidence = 0.6
summary(rules2)
#inspect(rules2, by="confidence")
inspect(rules2, by="lift")
plot(rules2, engine="htmlwidget", main="5K data Lift on Confidence vs Support")


```

### iii- Applying Apriori - 20K
```{r}
#minSup, minConf

frequent_list3 <- apriori(transact3, parameter=list(support = 0.019, target="frequent itemsets"))
inspect(sort(frequent_list3, decreasing = T, by="support"))

rules3 <- apriori(transact3, parameter=list(support = 0.019, confidence=0.94))#, confidence = 0.6
summary(rules3)
#inspect(rules3, by="confidence")
inspect(rules3, by="lift")
plot(rules3, engine="htmlwidget", main="20K data Lift on Confidence vs Support")


```

### iv - Applying Apriori - 75K
```{r}
#minSup, minConf

frequent_list4 <- apriori(transact4, parameter=list(support = 0.019, target="frequent itemsets"))
inspect(sort(frequent_list4, decreasing = T, by="support"))

rules4 <- apriori(transact4, parameter=list(support = 0.019, confidence=0.94))#, confidence = 0.6
summary(rules4)
#inspect(rules4, by="confidence")
inspect(rules4, by="lift")
plot(rules4, engine="htmlwidget", main="75K data Lift on Confidence vs Support")


```

### C - Comparing the Results
```{r}
paste("1K: 121 frequent itemsets, 47 rules.
      5K: 124 frequent itemsets, 42 rules.
      20K: 124 frequent itemsets, 32 rules.
      75K: 124 frequent itemsets, 31 rules.
      Taking minSup=0.019 gives us a frequent itemlist of 121-124 in all transaction lists (1K,5K,20K,75K), with little change. However, the amount of rules we have decreases as we increase the size of our data from 1K to 75K. Therefore, as our data increase in size, we are more certain about the rules.")

```

### D - Most-Least Frequent Item(set)
```{r}
frequent_list4 <- apriori(transact4, parameter=list(support = 0.019, target="frequent itemsets")) #0.05
inspect(head(sort(frequent_list4, decreasing = T, by="support")))
inspect(head(sort(frequent_list4, decreasing = F, by="support")))
paste("The most frequent item is Coffee Eclair, with a support of 0.11, counted 8193 times. The least frequent itemset is: {Apple Croissant, Apple Danish, Apple Tart, Cherry Soda} with a support of 0.02, counted 1519 times.")
```



## 2.2 - Recommender System - Incomplete
```{r}
#movies_original <- read.csv("/Users/aliguzelyel/Desktop/Classes-College/CS/CS\ 422/Homework\ 9\ CS\ 422/ml-latest-small/movies.csv", sep=",", header=T)
#head(movies_original)
#ratings <- read.csv("/Users/aliguzelyel/Desktop/Classes-College/CS/CS\ 422/Homework\ 9\ CS\ 422/ml-latest-small/ratings.csv")
#head(ratings)
#user_w_mov <- data.frame(1, as.data.frame(t(ratings$movieId[which(ratings$userId==1)])))
#user_w_mov <- rbind.fill(user_w_mov, data.frame(as.data.frame(t(c(ratings$movieId[which(ratings$userId==2)])))))
#user_w_mov
#head(user_w_mov)
#for (i in 2:671){
#  user_w_mov <- rbind.fill(user_w_mov, as.data.frame(t(ratings$movieId[which(ratings$userId==i)])))
#  #user_w_mov
#  #df = rbind(df, data.frame(x,y,z))
#}
#user_w_mov
#user_w_mov$X1 <- c(1:671)
#user_w_mov
#as.data.frame(t(user_w_mov))
```
